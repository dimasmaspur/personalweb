---
export interface Props {
  name: string;
  level: number; // 1-5 scale
  color?: string;
}

const { name, level, color = "blue" } = Astro.props;

const getColorClasses = (color: string) => {
  const colors = {
    blue: "bg-blue-100 text-blue-800 border-blue-200",
    green: "bg-green-100 text-green-800 border-green-200",
    purple: "bg-purple-100 text-purple-800 border-purple-200",
    orange: "bg-orange-100 text-orange-800 border-orange-200",
    red: "bg-red-100 text-red-800 border-red-200",
  };
  return colors[color as keyof typeof colors] || colors.blue;
};

const getLevelWidth = (level: number) => {
  return `${(level / 5) * 100}%`;
};
---

<div class={`p-4 rounded-lg border-2 transition-all duration-300 hover:scale-105 hover:shadow-lg ${getColorClasses(color)}`}>
  <div class="flex justify-between items-center mb-2">
    <h3 class="font-semibold">{name}</h3>
    <span class="text-sm opacity-75">{level}/5</span>
  </div>
  <div class="w-full bg-white bg-opacity-50 rounded-full h-2">
    <div 
      class="h-2 rounded-full transition-all duration-500 ease-out"
      style={`width: ${getLevelWidth(level)}; background-color: currentColor; opacity: 0.6;`}
    ></div>
  </div>
</div>
